openapi: 3.0.0

info:
  title: api.flux.fail
  description: >
    https://flux.fail/ is a free and open-source platform for reporting and
    tracking delays in the public transportation system.

  version: 1.0.0

servers:
  - url: http://api.flux.fail/v1

paths:
  /account/login:
    post:
      summary: Sends a login link via E-Mail
      tags:
        - authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        200:
          description: You should have received a login link via e-mail.

  /account/login/{token}:
    get:
      summary: Validates a token and authenticates the user
      tags:
        - authentication
      parameters:
        - in: path
          name: token
          schema:
            type: string
          required: true
          description: foo
      responses:
        200:
          description: Login successful
        401:
          description: Login failed

  /account/{id}:
    get:
      summary: Requests account information
      tags:
        - authentication
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        404:
          description: Not found


  /delays:
    get:
      summary: Requests a limited list of delays
      description: >
        Anybody can browse the stream of reported delays.
        The stream can be filtered to allow for drill-down search.
      tags:
        - delays
      parameters:
        - name: account
          description: >
            List only delays from this account.
            This is used when users selecta "show only my delays", but can also
            be used i.e. if moderators want to list the delays of a particular
            account.
          in: header
          schema:
            type: string
        - name: country
          description: List only delays from this country.
          in: header
          schema:
            type: string
        - name: city
          description: List only delays from this city.
          in: header
          schema:
            type: string
        - name: vehicle
          description: List only delays of this vehicle.
          in: header
          schema:
            $ref: '#/components/schemas/Vehicle'
        - name: line
          description: List only delays of this line.
          in: header
          schema:
            type: string
        - name: direction
          description: List only delays in this direction.
          in: header
          schema:
            type: string
        - name: limit
          description: "Limit the amount of delays returned (max.: 100)."
          in: query
          schema:
            type: integer
            format: uint8
        - name: offset
          description: The offset (page) at which to start listing.
          in: query
          schema:
            type: integer
            format: uint64
      responses:
        204:
          description: "No content"
        206:
          description: "Partial content"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Delay'

  /delay:
    post:
      summary: Reports a new delay
      description: >
        Delays can be reported by anybody.
        If an anonymous user reports a delay, an account will be generated
        on-the-fly before logging the user in to that account and reporting the
        delay under it.
      tags:
        - delays
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delay'
      responses:
        202:
          description: Success
        405:
          description: Invalid

    delete:
      summary: Deletes a delay
      description: >
        Delays can only be deleted by the user who created them (or by modss).
      tags:
        - delays
      security:
        - bearerAuth: []
      parameters:
        - name: delay
          description: The id of the delay to delete
          in: header
          required: true
          schema:
            type: string
      responses:
        204:
          description: Success
        401:
          description: Unauthorized
        403:
          description: Failed

components:
  securitySchemes:
    bearerAuth:            # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Delay:
      type: object
      properties:
        id:
          type: string
          description: The unique ID of the delay.
        account:
          type: string
          description: The unique ID of the account who reported the delay.
        created_at:
          type: string
          format: dateTime
          description: A timestamp from when the delay was reported (UTC).
        scheduled_departure:
          type: string
          format: dateTime
          description: What the user reported as scheduled departure time.
        effective_delay:
          type: integer
          format: uint16
          description: The effective delay in minutes.
        vehicle_early:
          type: integer
          format: uint8
          description: The amount of minutes the vehicle is running early.
        vehicle:
          $ref: '#/components/schemas/Vehicle'
        location:
          type: string
          description: >
            Where the user reported to be initially affected
            (bus stop, train station, airport, etc).
        line:
          type: string
          description: The name of the line.
        direction:
          type: string
          description: >
            The final destination of the line
            (a.k.a. what direction it is driving).

    Account:
      type: object
      properties:
        id:
          type: string
          description: The unique account ID.
        username:
          type: string
          description: Optional unique username.
        userFlags:
          $ref: '#/components/schemas/AccountFlags'
        avatar:
          type: string
          description: URL to avatar (on-premises).
        country:
          type: string
          description: Optional default country for reports.
        city:
          type: string
          description: Optional default city for reports.

    AccountFlags:
      description: >
        An account can have a combination of different flags.
        These flags manipulate the bahaviour of the account in various ways.
      type: integer
      format: uint16
      # Unfortunately, Swagger seems to not support iota enums.
      #  - 0   # Normal
      #  - 1   # Test-User (visible only to self, ignored in statistiscs/metrics)
      #  - 2   # Muted (visible only to self, ignored in statistics/metrics)
      #  - 4   # Moderator
      #  - 8   # Employee / Team-Member
      #  - 16  # Supporter Account

    Vehicle:
      description: >
        Delays can be reported for specific vehicles.
        When browsing the delays, the user may want to filter by vehicle.
      type: integer
      format: uint16
      # Unfortunately, Swagger seems to not support iota enums.
      #  - 0   # None
      #  - 1   # bus
      #  - 2   # train
      #  - 4   # underground
      #  - 8   # tram
      #  - 16  # lift
      #  - 32  # ship
      #  - 64  # airplane
      #  - 128 # rocket
